// O(d * (n + b)) time | O(n + b) sapce
// d = max digits, b = base of numbering system used
// n = length of input array
function radixSort(array) {
  if (array.length === 0) return array;
	const maxNumber = Math.max(...array);
	let digit = 0;
	while (maxNumber / 10 ** digit > 0) {
		countingSort(array, digit);
		digit++;
	}
	return array;
}

function countingSort(array, digit) {
	const sortedArray = new Array(array.length).fill(0);
	const countArray = new Array(10).fill(0);
	
	const digitColumn = 10 ** digit;
	for (const num of array) {
		const countIndex = Math.floor(num / digitColumn) % 10; 
		countArray[countIndex]++;
	}
	
	for (let index = 1; index < 10; index++) {
		countArray[index] += countArray[index - 1];
	}
	
	for (let index = array.length - 1; index > -1; index--) {
		const countIndex = Math.floor(array[index] / digitColumn) % 10;
		countArray[countIndex]--;
		const sortedIndex = countArray[countIndex];
		sortedArray[sortedIndex] = array[index];
	}
	
	for (let index = 0; index < array.length; index++) {
		array[index] = sortedArray[index];
	}
}